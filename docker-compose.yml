version: '3'
services:

  redis:
    image: redis

  # CATALOG
  catalog_ms:
    build: ./catalog_ms/
#    command: bash -c "python manage.py migrate
#      && sleep 10
#      && celery -A catalog_ms worker --loglevel=info
#      && python manage.py runserver 0.0.0.0:8000"
    command: ./run_web.sh
    ports:
    - "8001:8000"
    volumes:
    - ./catalog_ms/:/app/src/
    - ./catalog_ms/logs/:/var/log/django/
    depends_on:
    - catalog_db
    - catalog_rabbit
    restart: unless-stopped
  catalog_db:
    build: ./catalog_ms/data/
    restart: always
    ports:
    - "8011:5432"
    volumes:
    - ./catalog_ms/data/postgres-data:/var/lib/postgresql/data
  catalog_rabbit:
    hostname: catalog_rabbit
    image: rabbitmq
    environment:
    - RABBITMQ_DEFAULT_USER=stefano
    - RABBITMQ_DEFAULT_PASS=stefano
    ports:
    - "5672:5672"
    - "15672:15672"
    depends_on:
    - redis
  catalog_worker:
    build: ./catalog_ms/
    command: ./run_celery.sh
    volumes:
    - ./catalog_ms/:/app/src/
    depends_on:
    - catalog_rabbit
    - redis
    restart: unless-stopped

  # ORDER
  order_ms:
    build: ./order_ms/
    command: bash -c "sleep 10
      && python manage.py migrate
      && python manage.py runserver 0.0.0.0:8000"
    ports:
    - "8002:8000"
    volumes:
    - ./order_ms/:/app/src/
    - ./order_ms/logs/:/var/log/django/
    depends_on:
    - order_db
    - order_rabbit
    restart: unless-stopped
  order_db:
    build: ./order_ms/data/
    restart: always
    ports:
    - "8012:5432"
    volumes:
    - ./order_ms/data/postgres-data:/var/lib/postgresql/data
  order_rabbit:
    hostname: order_rabbit
    image: rabbitmq
    environment:
    - RABBITMQ_DEFAULT_USER=stefano
    - RABBITMQ_DEFAULT_PASS=stefano
    ports:
    - "5673:5672"
    - "15673:15672"
    depends_on:
    - redis
  order_worker:
    build: ./order_ms/
    command: ./run_celery.sh
    volumes:
    - ./order_ms/:/app/src/
    depends_on:
    - order_rabbit
    - redis
    restart: unless-stopped

  # NGINX
  nginxx:
    build: ./nginx/
    volumes:
    - ./nginx/config/:/etc/nginx/conf.d/
    ports:
    - "9001:80"
    depends_on:
    - catalog_ms
    - order_ms
    restart: unless-stopped

  # PROFILE
  profile_ms:
    build: ./profile_ms/
#    command: bash -c "python manage.py migrate
#      && sleep 10
#      && celery -A catalog_ms worker --loglevel=info
#      && python manage.py runserver 0.0.0.0:8000"
    command: ./run_web.sh
    ports:
    - "8003:8000"
    volumes:
    - ./profile_ms/:/app/src/
    - ./profile_ms/logs/:/var/log/django/
    depends_on:
    - profile_db
    restart: unless-stopped
  profile_db:
    build: ./profile_ms/data/
    restart: always
    ports:
    - "8013:5432"
    volumes:
    - ./profile_ms/data/postgres-data:/var/lib/postgresql/data

  # FRONTEND
  frontend_ms:
    build: ./frontend_ms/
    ports:
    - "3000:3000"
    links:
    - order_ms
    - catalog_ms
    volumes:
    - ./frontend_ms/:/app/src/
    depends_on: ["order_ms", "catalog_ms", "nginx"]


  wazuh:
    image: wazuh/wazuh
    hostname: wazuh-manager
    restart: always
    ports:
      - "1514:1514/udp"
      - "1515:1515"
      - "514:514/udp"
      - "55000:55000"
#      - "1516:1516"
    networks:
        - docker_elk
#    volumes:
#      - catalog_ms/logs/debug.log:/var/logs/catalog_ms/debug.log
#      - profile_ms/logs/debug.log:/var/logs/profile_ms/debug.log
#      - order_ms/logs/debug.log:/var/logs/order_ms/debug.log
#      - my-custom-config-path/ossec.conf:/wazuh-config-mount/etc/ossec.conf
    depends_on:
      - logstash
  logstash:
    image: wazuh/wazuh-logstash
    hostname: logstash
    restart: always
#    volumes:
#      - my-path:/etc/logstash/conf.d:Z
    volumes:
      - ./catalog_ms/logs/debug.log:/var/logs/catalog_ms/debug.log
      - ./profile_ms/logs/debug.log:/var/logs/profile_ms/debug.log
      - ./order_ms/logs/debug.log:/var/logs/order_ms/debug.log
    links:
      - elasticsearch:elasticsearch
    ports:
      - "5000:5000"
    networks:
      - docker_elk
    depends_on:
      - elasticsearch
    environment:
      - LS_HEAP_SIZE=2048m
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.3.0
    hostname: elasticsearch
    restart: always
    ports:
      - "9200:9200"
#      - "9300:9300"
    environment:
      - node.name=node-1
      - cluster.name=wazuh
      - network.host=0.0.0.0
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
#    volumes:
#      - my-path:/usr/share/elasticsearch/data:Z
    networks:
        - docker_elk
  kibana:
    image: wazuh/wazuh-kibana
    hostname: kibana
    restart: always
#    ports:
#      - "5601:5601"
#    environment:
#      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - docker_elk
    depends_on:
      - elasticsearch
    links:
      - elasticsearch:elasticsearch
      - wazuh:wazuh
  nginx:
    image: wazuh/wazuh-nginx
    hostname: nginx
    restart: always
    environment:
      - NGINX_PORT=443
    ports:
      - "81:80"
      - "444:443"
#    volumes:
#      - my-path:/etc/nginx/conf.d:Z
    depends_on:
      - kibana
    links:
      - kibana:kibana

networks:
  docker_elk:
    driver: bridge
    ipam:
      config:
      - subnet: 172.25.0.0/24